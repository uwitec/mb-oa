





using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Text;
using System.Data.Entity;
using System.Data.Entity.ModelConfiguration;


namespace EntityObjectLib
{
	/// 订单
	public class Order
	{
		[Key]
		public string ID {get;set;}
		/// 订单编码
		public string orderCode {get;set;}
		/// 订单说明
		public string remark {get;set;}
		/// 客户名称 
		public virtual Customer customer {get;set;}
		/// 订单创建人 
		public virtual User createdUser {get;set;}
		/// 订单审核人 
		public virtual User auditedUser {get;set;}
		/// 订单明细
		public virtual ICollection<orderDetail> orderDetails {get;set;}
	}

	/// 客户
	public class Customer
	{
		[Key]
		public string ID {get;set;}
		/// 客户编码
		public string code {get;set;}
		/// 客户名称
		public string name {get;set;}
		/// 订单
		public virtual ICollection<Order> order_customer {get;set;}
	}

	/// 订单
	public class orderDetail
	{
		[Key]
		public string ID {get;set;}
		/// 品种
		public string name {get;set;}
		/// 规格
		public string model {get;set;}
		/// 单价
		public decimal price {get;set;}
		/// 数量
		public decimal amount {get;set;}
		/// 订单
		public virtual Order order_orderdetails {get;set;}
	}

	/// 系统用户
	public class User
	{
		[Key]
		public string ID {get;set;}
		/// 用户名
		public string code {get;set;}
		/// 姓名
		public string name {get;set;}
		/// 订单
		public virtual ICollection<Order> order_createduser {get;set;}
		/// 订单
		public virtual ICollection<Order> order_auditeduser {get;set;}
	}

}
namespace EntityObjectContext
{
	public class MyDB : DbContext
	{
		public DbSet<Order> Orders { get; set; }
		public DbSet<Customer> Customers { get; set; }
		public DbSet<orderDetail> orderDetails { get; set; }
		public DbSet<User> Users { get; set; }
		protected override void OnModelCreating(DbModelBuilder modelBuilder)
		{
			modelBuilder.Entity<Order>()
				.HasOptional(m => m.customer)
				.WithMany(m => m.Order_customer)
				.Map(m => { m.MapKey("customer"); });

			modelBuilder.Entity<Order>()
				.HasOptional(m => m.createdUser)
				.WithMany(m => m.Order_createdUser)
				.Map(m => { m.MapKey("createdUser"); });

			modelBuilder.Entity<Order>()
				.HasOptional(m => m.auditedUser)
				.WithMany(m => m.Order_auditedUser)
				.Map(m => { m.MapKey("auditedUser"); });

			modelBuilder.Entity<orderDetail>()
				.HasOptional(m => m.Order_orderDetails)
				.WithMany(m => m.orderDetails)
				.Map(m => { m.MapKey("Order_orderDetails"); });

		}
	}
}
