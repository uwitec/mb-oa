@section header {

    <script type="text/javascript">
        /**
        * chw 2011.4.7
        * panel: 主面板
        */
        Ext.onReady(function () {
            var winMR;
            var panel = Ext.create('Ext.panel.Panel', {
                region: 'center',
                layout: {
                    type: 'hbox',
                    align: 'stretch'
                    //pack: 'start'
                },
                defaults: {
                    flex: 1 //子元素平均分配宽度
                },
                split: true,
                autoScroll: true,
                bodyPadding: 0,
                border: 0,
                padding: 0,
                margin: 0,
                tbar: [
                          { xtype: 'label', text: '个人办公 -> 我的提醒', cls: 'formNav' },
                          { xtype: 'tbfill' },
                          { xtype: 'button', iconCls: 'helpIcon', text: '', tooltip: '帮助', tooltipType: 'title', handle: function (source, e) { alert('帮助!') } }
                          ]/*,
                bbar: [
                          { xtype: 'button', text: 'Button 1', handler: function (source, e) { openWindow(); } }
                        ],
                html: ''*/
            });
            new Ext.container.Viewport({
                layout: 'border',
                border: 0,
                items: [
                panel
                ]
            });

            Ext.regModel('role', {
                //            fields: ['ID','privilegeName', 'resourceCode', 'privilegeCode']
                fields: [
            { name: 'createDT', type: 'date' },
            { name: 'subject', type: 'string' },
            { name: 'content', type: 'string' },
            { name: 'creator', type: 'string' },
            { name: 'alarmBegin', type: 'date' },
            { name: 'count', type: 'int' },
            { name: 'span', type: 'int' }
            ]
            });

            var roleGrid = new Ext.grid.GridPanel({
                store: new Ext.data.ArrayStore({
                    model: 'role',
                    //sorters: ['orderNO'],
                    data: [
                    ['2011/1/1', '新年工作计划', '完成新年工作计划,并发送给局长', '李林', '2011/1/10 8:00',2,5],
                    ['2011/1/1', '新年工作计划', '完成新年工作计划,并发送给局长', '李林', '2011/1/10 8:00', 2, 5],
                    ['2011/1/1', '新年工作计划', '完成新年工作计划,并发送给局长', '李林', '2011/1/10 8:00', 2, 5],
                    ['2011/1/1', '新年工作计划', '完成新年工作计划,并发送给局长', '李林', '2011/1/10 8:00', 2, 5],
                    ['2011/1/1', '新年工作计划', '完成新年工作计划,并发送给局长', '李林', '2011/1/10 8:00', 2, 5],
                    ['2011/1/1', '新年工作计划', '完成新年工作计划,并发送给局长', '李林', '2011/1/10 8:00', 2, 5],
                    ['2011/1/1', '新年工作计划', '完成新年工作计划,并发送给局长', '李林', '2011/1/10 8:00', 2, 5],
                    ['2011/1/1', '新年工作计划', '完成新年工作计划,并发送给局长', '李林', '2011/1/10 8:00', 2, 5],
                    ['2011/1/1', '新年工作计划', '完成新年工作计划,并发送给局长', '李林', '2011/1/10 8:00', 2, 5]
                ]
                }),
                margin: 6,
                //width: 400,
                //height: 300,
                autoScroll: true,
                border: 0,
                padding: 0,
                bodyPadding: 0,
                flex: 3,
                stripeRows: true,
                plugins: [new Ext.grid.CellEditing({ clicksToEdit: 2 })],
                selModel: { selType: 'cellmodel' },
                tbar: [
                          { xtype: 'button', iconCls: 'iconNew', text: '', tooltip: '新建角色', tooltipType: 'title', handler: function (source, e) { winMR.show(this); } },
                          { xtype: 'button', iconCls: 'iconEdit', text: '', tooltip: '编辑角色', tooltipType: 'title', handler: function (source, e) { Ext.getCmp('grid001').view.refresh(); } },
                          { xtype: 'button', iconCls: 'iconDelete', text: '', tooltip: '删除角色', tooltipType: 'title', handler: function (source, e) { Ext.getCmp('grid001').view.refresh(); } },
                          { xtype: 'tbseparator' },
                          { xtype: 'tbfill' },
                          { xtype: 'button', iconCls: 'iconRefresh', text: '', tooltip: '刷新', tooltipType: 'title', handle: function (source, e) { alert('刷新当前页签!') } }
                        ],
                title: '角色列表',
                frame: true,
                columns: [
                new Ext.grid.RowNumberer(),
                {
                    text: 'ID',
                    dataIndex: 'ID',
                    width: 100,
                    hidden: true
                }, {
                    text: '创建时间',
                    dataIndex: 'createDT',
                    width: 100,
                    field: { allowBlank: false }
                }, {
                    text: '标题',
                    dataIndex: 'subject',
                    width: 160,
                    field: { allowBlank: false },
                    renderer: function (v) { return '<a href="#">' + v + '</a>'; }
                }, {
                    text: '内容',
                    dataIndex: 'content',
                    flex: 1,
                    field: { allowBlank: false }
                }, {
                    text: '创建人',
                    dataIndex: 'creator',
                    //renderer: function (v) { return '<a href="#">' + v + '</a>'; },
                    width: 100,
                    //field: { allowBlank: false },
                }, {
                    text: '提醒时间',
                    dataIndex: 'alarmBegin',
                    //renderer: function (v) { return '<a href="#">' + v + '</a>'; },
                    width: 100,
                    //field: { allowBlank: false },
                }, {
                    text: '提醒次数',
                    dataIndex: 'count',
                    //renderer: function (v) { return '<a href="#">' + v + '</a>'; },
                    width: 100,
                    //field: { allowBlank: false },
                }, {
                    text: '间隔',
                    dataIndex: 'span',
                    //renderer: function (v) { return '<a href="#">' + v + '</a>'; },
                    width: 100,
                    //field: { allowBlank: false },
                }, {
                    text: '操作',
                    //dataIndex: 'Summary',
                    width: 50,
                    align: 'center',
                    renderer: function (v) { return '<span class="iconEdit" style="width:20px;height:18px;" title="修改"></span><span class="iconDelete" style="width:20px;height:18px;" title="修改"></span>'; }
                }],
                viewConfig: {
                    listeners: {
                        //                    itemdblclick: function (view, record, el, index, e) { /*alert(record.get("ID"))*/winMR.show(this) },
                        itemclick: function (view, record, el, index, e) {

                        }
                    }
                }
            }); // grid

        panel.add(roleGrid);

        winMR = Ext.create('Ext.window.Window', {
            title: '模块信息',
            closable: true,
            closeAction: 'hide',
            modal: true,
            //animateTarget: this,
            width: 600,
            height: 350,
            //layout: 'border',
            bodyStyle: 'padding: 5px;',
            layout: 'fit',
            bodyPadding: 10,
            items: [{
                xtype: 'form',
                layout: {
                    type: 'vbox',
                    align: 'stretch'
                },
                bodyBorder: 0,

                fieldDefaults: {
                    labelAlign: 'top',
                    labelWidth: 100,
                    labelStyle: 'font-weight:bold'
                },
                defaults: {
                    margins: '0 0 10 0'
                },

                items: [{
                    xtype: 'fieldcontainer',
                    fieldLabel: '模块信息',
                    labelStyle: 'font-weight:bold;padding:0',
                    layout: 'hbox',
                    defaultType: 'textfield',

                    fieldDefaults: {
                        labelAlign: 'top'
                    },

                    items: [{
                        flex: 1,
                        name: 'code',
                        fieldLabel: '模块编码',
                        allowBlank: false
                    }, {
                        flex: 1,
                        //                        width: 100,
                        name: 'name',
                        fieldLabel: '模块名称',
                        margins: '0 0 0 20',
                        allowBlank: false
                    }/*, {
                        flex: 2,
                        name: 'lastName',
                        fieldLabel: 'Last',
                        allowBlank: false,
                        margins: '0 0 0 5'
                    }*/]
                }, {
                    xtype: 'textfield',
                    fieldLabel: 'Your Email Address',
                    vtype: 'email',
                    allowBlank: true
                }, {
                    xtype: 'textfield',
                    fieldLabel: 'Subject',
                    allowBlank: true
                }, {
                    xtype: 'textareafield',
                    fieldLabel: 'Message',
                    labelAlign: 'top',
                    flex: 1,
                    margins: '0',
                    allowBlank: true
                }],

                buttons: [{
                    text: '确定',
                    handler: function () {
                        if (this.up('form').getForm().isValid()) {
                            this.up('form').getForm().reset();
                            this.up('window').hide();
                        }
                    }
                }, {
                    text: '取消',
                    margins: '0 0 0 20',
                    handler: function () {
                        this.up('form').getForm().reset();
                        this.up('window').hide();
                    }
                }]
            }
            ]
        });

    });      // Ext.onReady

            
    </script>
}
